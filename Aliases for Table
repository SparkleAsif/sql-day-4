What are Column Aliases in SQL?
A column alias is a temporary name assigned to a column or expression in a query. It makes the output easier to read or provides a more meaningful description. Aliases are commonly used with calculated fields or to rename columns for clarity in the result set.

Syntax

SELECT column_name AS alias_name
FROM table_name;
AS: Optional keyword used to specify the alias. You can omit it and directly provide the alias, but using AS improves readability.
Aliases are temporary and do not change the actual column name in the table.
Examples
1. Renaming a Column

SELECT name AS EmployeeName, position AS JobTitle
FROM employees;
Result:

EmployeeName	JobTitle
Alice	Manager
Bob	Developer
2. Aliasing a Calculated Column

SELECT salary, salary * 12 AS AnnualSalary
FROM employees;
Result:

salary	AnnualSalary
5000	60000
7000	84000
3. Using Aliases Without AS

SELECT name EmployeeName, position JobTitle
FROM employees;
Result:

EmployeeName	JobTitle
Alice	Manager
Bob	Developer
4. Combining Multiple Columns into One

SELECT CONCAT(first_name, ' ', last_name) AS FullName
FROM employees;
Result:

FullName
Alice Johnson
Bob Smith
5. Using Aliases with Aggregate Functions

SELECT AVG(salary) AS AverageSalary, MAX(salary) AS HighestSalary
FROM employees;
Result:

AverageSalary	HighestSalary
6000	7000
Important Notes
Case Sensitivity: Aliases are case-sensitive in some databases. Use quotes if the alias contains spaces or special characters.

SELECT name AS "Employee Name"
FROM employees;
Visibility: Aliases are only visible in the result set; they cannot be used in the WHERE clause. Use HAVING or a subquery instead for filtering on aliases.
Practice Exercises
Write a query to display






You said:
 (Aliases for Table
ChatGPT said:
ChatGPT
What are Table Aliases in SQL?
A table alias is a temporary name given to a table in a SQL query. It is useful for simplifying complex queries, improving readability, and reducing the amount of typing when dealing with long table names or joining multiple tables.

Syntax

SELECT column_name
FROM table_name AS alias_name;
OR without AS:


SELECT column_name
FROM table_name alias_name;
Key Features
A table alias is temporary and only lasts for the duration of the query.
It does not change the actual table name in the database.
It simplifies references to the table, especially in queries with joins or subqueries.
Examples
1. Basic Table Alias

SELECT e.name, e.position
FROM employees AS e;
Result:

name	position
Alice	Manager
Bob	Developer
2. Joining Tables with Aliases
Using aliases makes it easier to reference tables in joins.


SELECT o.order_id, c.name AS customer_name
FROM orders AS o
JOIN customers AS c ON o.customer_id = c.id;
Result:

order_id	customer_name
1	Alice
2	Bob
3. Using Aliases in Self-Joins
Self-joins require referencing the same table multiple times, and aliases simplify this process.


SELECT e1.name AS Employee, e2.name AS Manager
FROM employees AS e1
JOIN employees AS e2 ON e1.manager_id = e2.id;
Result:

Employee	Manager
Bob	Alice
4. Aliases in Subqueries
You can use aliases to refer to subquery results.


SELECT t.department, t.total_salary
FROM (SELECT department, SUM(salary) AS total_salary
      FROM employees
      GROUP BY department) AS t;
Result:

department	total_salary
IT	100000
HR	80000
Best Practices
Use meaningful aliases to make your queries more readable.
Use short aliases for tables with long names to reduce typing effort.
Avoid overly generic aliases (e.g., a, b, c), as they can reduce clarity.
Practice Exercises
